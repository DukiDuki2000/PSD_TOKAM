services:
  redis:
    image: redis:8.0.2
    container_name: redis-server
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - cache:/data
    command: ["redis-server", "--requirepass", "admin"]
    networks:
      - flink-network
  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight
    restart: always
    ports:
      - '5540:5540'
    volumes:
      - redisinsight_data:/db
    networks:
      - flink-network
  jobmanager:
    image: apache/flink:1.19-java11
    container_name: flink-jobmanager
    ports:
      - "8081:8081"
    volumes:
      - ./flink-volume/jobs:/opt/flink/jobs
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    networks:
      - flink-network

  taskmanager:
    image: apache/flink:1.19-java11
    container_name: flink-taskmanager
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
      - TASK_MANAGER_NUMBER_OF_TASK_SLOTS=2
    networks:
      - flink-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - flink-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka3
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,INTERNAL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - flink-network
    volumes:
      - ./kafka-scripts/init-kafka-topics.sh:/opt/kafka/init-kafka-topics.sh
    entrypoint: |
      bash -c "
        /etc/confluent/docker/run &
        KAFKA_PID=$$!
        sleep 10
        chmod +x /opt/kafka/init-kafka-topics.sh
        /opt/kafka/init-kafka-topics.sh
        wait $$KAFKA_PID
      "
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: no
    environment:
      KAFKA_BROKERCONNECT: "kafka3:9093"
    ports:
      - 9000:9000
    networks:
      - flink-network
    depends_on:
      - kafka



  python-generator:
    build:
      context: python
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:8080"
    networks:
      - flink-network
    environment:
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=8080
      - FLASK_DEBUG=false
      - KAFKA_BROKER=kafka:9093
      - KAFKA_TOPIC=sensor_data
      - REDIS_HOST=redis-server
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=admin


networks:
  flink-network:
    driver: bridge

volumes:
  cache:
  redisinsight_data: